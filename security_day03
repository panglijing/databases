+++++++++++++监控与安全_day03_学习任务
	一、Linux基本防护

[root@localhost ~]# useradd  bob
]# echo "123456" |# echo  "123456" | passwd --stdin bob
[root@localhost ~]# chage -d 0 bob
[root@localhost ~]# chage -E 2020/12/31 bob
[root@localhost ~]# chage -l bob
最近一次密码修改时间					：密码必须更改
密码过期时间					：密码必须更改
密码失效时间					：密码必须更改
帐户过期时间						：12月 31, 2020
两次改变密码之间相距的最小天数		：0
两次改变密码之间相距的最大天数		：99999
在密码过期之前警告的天数	：7
[root@localhost ~]# 

root@localhost ~]# useradd bob2
[root@localhost ~]# echo "123456" | passwd --stdin bob2
更改用户 bob2 的密码 。
passwd：所有的身份验证令牌已经成功更新。
[root@localhost ~]# 
[root@localhost ~]# passwd  -S bob2
bob2 PS 2020-04-07 0 99999 7 -1 (密码已设置，使用 SHA512 算法。)
[root@localhost ~]# 
[root@localhost ~]# passwd  -l bob2
锁定用户 bob2 的密码 。
passwd: 操作成功
[root@localhost ~]# passwd  -S bob2
bob2 LK 2020-04-07 0 99999 7 -1 (密码已被锁定。)
[root@localhost ~]# passwd  -u bob2
解锁用户 bob2 的密码。
passwd: 操作成功
[root@localhost ~]# passwd  -S bob2
bob2 PS 2020-04-07 0 99999 7 -1 (密码已设置，使用 SHA512 算法。)
[root@localhost ~]# 			

[root@localhost ~]# passwd -l bob2
锁定用户 bob2 的密码 。
passwd: 操作成功
[root@localhost ~]# grep bob2 /etc/shadow
bob2:!!$6$18zJ7QKh$QlWchH8ZN0KGgbML.fgm9MEndg5weesnnMIMFeEck89eRXR/NQdh2zMg/yy6FmvG7.pWN5xS6LPgBLd0.IHF4/:18359:0:99999:7:::
[root@localhost ~]# 
[root@localhost ~]# passwd  -S bob2
bob2 LK 2020-04-07 0 99999 7 -1 (密码已被锁定。)
[root@localhost ~]# 

]# grep -v "#" /etc/login.defs  


[root@localhost ~]# vim /etc/issue
[root@localhost ~]# cat /etc/issue.net 
\S
Kernel \r on an \m
[root@localhost ~]# vim /etc/issue.net 
[root@localhost ~]# 
[root@localhost ~]# cat /etc/issue
window  server 2000
[root@localhost ~]#


RHEL7 systemctl  start|stop|restart httpd
RHEL6 service   httpd  start|stop|restart

RHEL7  systemctl enable|disable httpd
RHEL6  chkconfig httpd on|off


[root@localhost ~]# lsattr  /etc/hosts
---------------- /etc/hosts
[root@localhost ~]# chattr  +i /etc/hosts
[root@localhost ~]# lsattr  /etc/hosts
----i----------- /etc/hosts
[root@localhost ~]# 

[root@localhost ~]# rm -rf /etc/hosts
rm: 无法删除"/etc/hosts": 不允许的操作
[root@localhost ~]# 
[root@localhost ~]# mv /etc/hosts /tmp/
mv: 无法将"/etc/hosts" 移动至"/tmp/hosts": 不允许的操作
[root@localhost ~]# 

[root@localhost ~]# lsattr  /etc/passwd
---------------- /etc/passwd
[root@localhost ~]# useradd bob6
[root@localhost ~]# grep bob6 /etc/passwd
bob6:x:1003:1003::/home/bob6:/bin/bash
[root@localhost ~]# 
[root@localhost ~]# chattr +a /etc/passwd
[root@localhost ~]# grep bob7 /etc/passwd
[root@localhost ~]# useradd bob7
useradd：无法打开 /etc/passwd
[root@localhost ~]# echo  "xxxx" >> /etc/passwd
[root@localhost ~]# tail -1 /etc/passwd
xxxx
[root@localhost ~]# chattr -a /etc/passwd
[root@localhost ~]# useradd bob7
[root@localhost ~]# sed -i '/^xxx/d' /etc/passwd
[root@localhost ~]#

			二、用户切换与提权   
		2.1 用户切换 su 
		    命令格式：
			
[john@localhost ~]$ su - root -c 'netstat  -utnlp  | grep zabbix_agentd'
密码：
tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      3539/zabbix_agentd  
[john@localhost ~]$ 

]# cat /var/log/secure 记录su 切换信息

		2.2 用户提权 sudo（重点）
			定义：系统的管理员root用户，给系统的普通用户，配置可以使用root用户命令的权限。
			主配置文件  /etc/sudoers
			打开文件的方式： visudo  或 vim  /etc/sudoers

			提权格式：
			普通用户名	服务器主机名列表=提权命令列表 （命令要写绝对路径）
			%用户组名	服务器主机名列表=提权命令列表

			普通用户查看可用执行的提权命令 sudo  -l  (首次查看需要输入自己登陆系统的密码)
			普通用户执行提权命令 sudo 提权命令

			例子： 给系统普通用户john ，使其可以管理mairadb数据库服务器
			useradd john
			echo 123456  | passwd --stdin  john

[root@localhost ~]# which  rpm
/usr/bin/rpm
[root@localhost ~]# which  yum
/usr/bin/yum
[root@localhost ~]# which  systemctl
/usr/bin/systemctl
[root@localhost ~]# 
[root@localhost ~]# which  vim
/usr/bin/vim
[root@localhost ~]#

			]# vim +92 /etc/sudoers
                        john	localhost,web200=/usr/bin/rpm , /usr/bin/yum , /usr/bin/systemctl  *  mariadb , /usr/bin/vim /etc/my.cnf

:wq

john@web200 ~]$ sudo -l
[sudo] john 的密码：
匹配 %2$s 上 %1$s 的默认条目：
    !visiblepw, always_set_home, match_group_by_gid, env_reset, env_keep="COLORS DISPLAY
    HOSTNAME HISTSIZE KDEDIR LS_COLORS", env_keep+="MAIL PS1 PS2 QTDIR USERNAME LANG
    LC_ADDRESS LC_CTYPE", env_keep+="LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES",
    env_keep+="LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE", env_keep+="LC_TIME
    LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY",
    secure_path=/sbin\:/bin\:/usr/sbin\:/usr/bin

用户 john 可以在 web200 上运行以下命令：
    (root) /usr/bin/rpm, /usr/bin/yum, /usr/bin/systemctl * mariadb, /usr/bin/vim /etc/my.cnf
[john@web200 ~]$ 
[john@web200 ~]$ sudo rpm -q mariadb-server
未安装软件包 mariadb-server 
[john@web200 ~]$ sudo rpm -q mariadb
未安装软件包 mariadb 
[john@web200 ~]$ 
[john@web200 ~]$ sudo yum -y install mariadb-server mariadb

[john@web200 ~]$ sudo systemctl  start mariadb
[john@web200 ~]$ ls /var/lib/mysql/
aria_log.00000001  ibdata1      ib_logfile1  mysql.sock          test
aria_log_control   ib_logfile0  mysql        performance_schema
[john@web200 ~]$ 
[john@web200 ~]$ sudo vim /etc/my.cnf
[mysqld]
log_bin
server_id=1
:wq
[john@web200 ~]$ sudo systemctl  restart mariadb
[john@web200 ~]$ 
[john@web200 ~]$ ls /var/lib/mysql/
aria_log.00000001  ib_logfile0         mariadb-bin.index  performance_schema
aria_log_control   ib_logfile1         mysql              test
ibdata1            mariadb-bin.000001  mysql.sock
[john@web200 ~]$

		启用日志 记录普通用户执行的提权命令

]# vim /etc/sudoers  (写在文件的末尾)
Defaults  logfile="/var/log/sudo"
:wq


[root@web200 ~]# vim /var/log/sudo.log   （执行过提权命令会自动创建文件并记录执行的命令）


sudo别名设置：（别名名称必须用大写字母）
	定义用户别名 User_Alias  别名名称=用户列表
	定义主机别名 Host_Alias  别名名称=主机名列表
	定义命令别名 Cmnd_Alias  别名名称=命令列表
[root@web200 ~]# vim /etc/sudoers

Cmnd_Alias SHARECMD=/usr/bin/rpm , /usr/bin/yum

Cmnd_Alias DBACMD=/usr/bin/systemctl  *  mariadb , /usr/bin/vim /etc/my.cnf

Cmnd_Alias WEBCMD=/usr/bin/systemctl  *  httpd , /usr/bin/vim /etc/httpd/conf/httpd.conf

Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bi    n/mount, /bin/umount

User_Alias MYUSER= zhangsan ,lisi

Host_Alias MYSER=localhost,web200

MYUSER MYSER=SHARECMD , STORAGE , DBACMD
john MYSER=WEBCMD , SHARECMD

:wq! 
		三、ssh访问控制
		3.1 基本防护 （修改服务的配置项 主配置文件 /etc/ssh/sshd_config）
]# vim /etc/ssh/sshd_config    练习5分钟到 16:45 
Port 2211
#AddressFamily any
ListenAddress 192.168.2.200
:wq

[root@web200 ~]# systemctl restart  sshd
[root@web200 ~]# netstat -utnlp  | grep  sshd

Xshell:\> ssh  root@192.168.2.200   2211 

[root@zabbix05 ~]# ssh -p 2211  root@192.168.2.200 


		3.2 黑白名单 (练习 + 休息到 17:25 )
			白名单：只允许客户端使用白名单列表里的用户访问
				AllowUsers  用户列表
				AllowGroups 用户组列表

 [root@web200 ~]# vim /etc/ssh/sshd_config
  AllowUsers john root@192.168.2.201  (写在文件的末尾)				
 :wq
	
 [root@web200 ~]# systemctl  restart sshd
	
		黑名单：仅不允许使用黑名单列表里的用户连接
				DenyUsers  用户列表
				DenyGroups 用户组列表

 [root@web200 ~]# vim /etc/ssh/sshd_config
  #AllowUsers john root@192.168.2.201  	
  DenyUsers john lisi 	(写在文件的末尾)		
 :wq
	
 [root@web200 ~]# systemctl  restart sshd
 

			3.3 仅允许密钥对认证登录 
				连接的验证方式:口令 和  密钥对 （默认2种都开启）
				对应的配置项 
				 65 PasswordAuthentication yes  口令

				 43 #PubkeyAuthentication yes   密钥对
				 47 AuthorizedKeysFile      .ssh/authorized_keys  存放公钥的文件名


			密钥对由2部分组成 : 公钥文件（加密 相当锁头）  和 私钥文件（解密相当钥匙）


			ssh服务密钥对验证登录的工作过程？



[root@zabbix05 ~]# ls /root/.ssh/
known_hosts
[root@zabbix05 ~]# ssh-keygen 
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:AjjiojxQUPD8JUBH9d+pMw4A7jGvR3FHN56YQrjki40 root@zabbix05
The key's randomart image is:
+---[RSA 2048]----+
|o++.o...         |
| + +  o.. . o    |
|. * +o.o.. = o   |
|.o + =+ o.+.o.   |
|o.  =+o+So. o    |
|=  .E++o   .     |
|.o  ... . +      |
|  .  ..  o o     |
|    ..    .      |
+----[SHA256]-----+
[root@zabbix05 ~]# ls /root/.ssh/
id_rsa  id_rsa.pub  known_hosts
[root@zabbix05 ~]# cat /root/.ssh/known_hosts 
[192.168.2.200]:2211 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPNmb4pXa6uMWzKg2R1WkH1KITBoQ9V2OKo95S56RZYLYAf5PI9nJiGa0PD7o66mAm9bxvxpr4eKbz4h4WF/B+I=
[root@zabbix05 ~]#

[root@zabbix05 ~]# ssh-copy-id   -p 2211 root@192.168.2.200

[root@zabbix05 ~]# ssh -p 2211 root@192.168.2.200
Last login: Wed Apr  8 01:44:21 2020 from 192.168.2.1
[root@web200 ~]# exit
登出
Connection to 192.168.2.200 closed.
[root@zabbix05 ~]# ssh -p 2211 john@192.168.2.200
john@192.168.2.200's password: 

[root@web200 ~]# vim +65 /etc/ssh/sshd_config 

PasswordAuthentication no
:wq

[root@web200 ~]# systemctl  restart sshd

[root@zabbix05 ~]# ssh -p 2211 john@192.168.2.200
Permission denied (publickey,gssapi-keyex,gssapi-with-mic).
[root@zabbix05 ~]# 
[root@zabbix05 ~]# ssh -p 2211 root@192.168.2.200
Last login: Wed Apr  8 01:47:00 2020 from 192.168.2.5
[root@web200 ~]#

	
	四、SElinux 安全防护 192.168.2.5 主机启用selinux
		4.1  了解一下SELINUX?

		4.2 启用selinux
		[root@zabbix05 ~]# vim /etc/sysconfig/selinux
			SELINUX=enforcing
		:wq
		
	    	[root@zabbix05 ~]# touch /.autorelabel
		[root@zabbix05 ~]# reboot



		4.3 selinux的使用
			4.3.1 查看安全上下文（标签）
				查看文件  ls -lZ 文件名
				查看目录	  ls  -ldZ  目录名
				查看进程   ps aux -Z


	        4.4 安全上下文的组成
 用户:角色:访问类型:选项...

 system_u:object_r:passwd_file_t:s0
 system_u:object_r:etc_t:s0
 system_u:system_r:httpd_t:s0

		4.5 selinux的常规规律
			新创建的文件或目录会继承父目录的安全上下文
			拷贝的文件会继承目标目录的安全上下文
			移动的文件会保持原有的安全上下文不变。			

		4.6 修改安全上下文件
			]# chcon -t httpd_sys_content_t /var/www/html/test.html 修改单个文件
			]# chcon -R -t httpd_sys_content_t /var/www/html 修改目录

		4.7 恢复安全上下文件
			]# restorecon /var/www/html/x.html  恢复单个文件
			]# restorecon -R /var/www/html     恢复目录	


		4.8 重置标签
			]# touch /.autorelabel
			]# reboot
		
	       在192.168.2.5 主机运行ftp服务，且配置允许匿名用户可以上传和下载文件

[root@zabbix05 ~]# rpm -q vsftpd || yum  -y  install vsftpd
vsftpd-3.0.2-22.el7.x86_64

[root@zabbix05 ~]# mkdir /var/ftp/share
[root@zabbix05 ~]# chmod  o+w /var/ftp/share

[root@zabbix05 ~]# sed -n '29p' /etc/vsftpd/vsftpd.conf 
anon_upload_enable=YES
[root@zabbix05 ~]# systemctl  start vsftpd 
[root@zabbix05 ~]# netstat  -utnlp  | grep  21
tcp6       0      0 :::21                   :::*                    LISTEN      1021/vsftpd         

[root@zabbix05 ~]# cp /etc/hosts /var/ftp/share/
[root@zabbix05 ~]# ls -ldZ /var/ftp/
drwxr-xr-x. root root system_u:object_r:public_content_t:s0 /var/ftp/
[root@zabbix05 ~]# 
[root@zabbix05 ~]# mv /root/anaconda-ks.cfg  /var/ftp/share/

[root@zabbix05 ~]# ls -lZ /var/ftp/share/
-rw-------. root root system_u:object_r:admin_home_t:s0 anaconda-ks.cfg
-rw-r--r--. root root unconfined_u:object_r:public_content_t:s0 hosts
[root@zabbix05 ~]#

		测试2.5主机ftp服务配置：禁用seLinux后客户端在命令行上传和下载文件
			
[root@zabbix05 ~]# getenforce 
Enforcing
[root@zabbix05 ~]# setenforce 0
[root@zabbix05 ~]# getenforce 
Permissive
[root@zabbix05 ~]# 

[root@web100 ~]# which  ftp || yum -y install ftp   #安装提供ftp命令软件

[root@web100 ~]# ftp  192.168.2.5  连接ftp服务器
Connected to 192.168.2.5 (192.168.2.5).
220 (vsFTPd 3.0.2)
Name (192.168.2.5:root): ftp  用户名
331 Please specify the password.
Password:  没密码直接回车
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> 
ftp> pwd  显示当前所在的目录
257 "/"
ftp> ls  查看文件列表
227 Entering Passive Mode (192,168,2,5,95,241).
150 Here comes the directory listing.
drwxr-xr-x    2 0        0               6 Aug 03  2017 pub
drwxr-xrwx    2 0        0              42 Apr 08 10:24 share
drwxr-xrwx    4 0        0            4096 Mar 09 23:19 upload
226 Directory send OK.
ftp> 
ftp> cd share 进入共享目录
250 Directory successfully changed.
ftp> 
ftp> ls  查看文件列表
227 Entering Passive Mode (192,168,2,5,116,136).
150 Here comes the directory listing.
-rw-------    1 0        0            1231 Feb 04 16:23 anaconda-ks.cfg
-rw-r--r--    1 0        0             179 Apr 08 10:23 hosts
226 Directory send OK.
ftp> 
ftp> get hosts  下载文件
local: hosts remote: hosts
227 Entering Passive Mode (192,168,2,5,192,53).
150 Opening BINARY mode data connection for hosts (179 bytes).
226 Transfer complete.
179 bytes received in 5.5e-05 secs (3254.55 Kbytes/sec)
ftp> 
ftp> bye 断开连接
221 Goodbye.
[root@web100 ~]# ls  查看下载的文件
anaconda-ks.cfg  hosts  zabbix-3.4.4
[root@web100 ~]# 

[root@web100 ~]# ls /etc/group
/etc/group
[root@web100 ~]# 


[root@web100 ~]# ftp 192.168.2.5  连接ftp服务器
Connected to 192.168.2.5 (192.168.2.5).
220 (vsFTPd 3.0.2)
Name (192.168.2.5:root): ftp  用户名
331 Please specify the password.
Password: 没密码直接回车
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> ls 查看目录列表
227 Entering Passive Mode (192,168,2,5,113,15).
150 Here comes the directory listing.
drwxr-xr-x    2 0        0               6 Aug 03  2017 pub
drwxr-xrwx    2 0        0              42 Apr 08 10:24 share
drwxr-xrwx    4 0        0            4096 Mar 09 23:19 upload
226 Directory send OK.
ftp> cd share  进共享目录
250 Directory successfully changed.
ftp> 
ftp> lcd /etc  切换到本机目录
Local directory now /etc
ftp> put group 上传文件
local: group remote: group
227 Entering Passive Mode (192,168,2,5,30,184).
150 Ok to send data.
226 Transfer complete.
546 bytes sent in 0.000176 secs (3102.27 Kbytes/sec)
ftp> 
ftp> ls 查看是否上传成功
227 Entering Passive Mode (192,168,2,5,77,126).
150 Here comes the directory listing.
-rw-------    1 0        0            1231 Feb 04 16:23 anaconda-ks.cfg
-rw-------    1 14       50            546 Apr 08 10:44 group
-rw-r--r--    1 0        0             179 Apr 08 10:23 hosts
226 Directory send OK.
ftp> 
ftp> bye 断开连接
221 Goodbye.
[root@web100 ~]#
		
