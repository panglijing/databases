+++++++++++NoSQL_DAY02 Redis集群
		1 创建redis集群
			1.1 集群的功能：
				解决服务的单点故障问题
				解决数据的备份问题

			1.2 拓扑结构与角色

			1.3 集群的工作过程：
				存储数据的工程过程？
				查询数据的工作过程？

			1.4 创建集群：
				1 启用每台redis服务的集群功能 （时间到 14:45）
 [root@host51 ~]# redis-cli  -h 192.168.4.51 -p 6351 shutdown
[root@host51 ~]# 
[root@host51 ~]# vim /etc/redis/6379.conf 
[root@host51 ~]# 
[root@host51 ~]# 
[root@host51 ~]# sed -n '815p;823p;829p' /etc/redis/6379.conf 
cluster-enabled yes
cluster-config-file nodes-6379.conf
cluster-node-timeout 5000
[root@host51 ~]# 
[root@host51 ~]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@host51 ~]# 
[root@host51 ~]# netstat  -utnlp  | grep  redis-server
tcp        0      0 192.168.4.51:16351      0.0.0.0:*               LISTEN      9908/redis-server 1 
tcp        0      0 192.168.4.51:6351       0.0.0.0:*               LISTEN      9908/redis-server 1 
[root@host51 ~]# 
[root@host51 ~]# redis-cli  -h 192.168.4.51 -p 6351
192.168.4.51:6351> cluster info
cluster_state:fail

[root@host51 ~]# ls /var/lib/redis/6379/
dump.rdb  nodes-6379.conf
[root@host51 ~]# 
[root@host51 ~]# cat /var/lib/redis/6379/nodes-6379.conf 
ba7dde6d71b71246d39e28dd90603a0c5d26669b :0@0 myself,master - 0 0 0 connected
vars currentEpoch 0 lastVoteEpoch 0
[root@host51 ~]#

		2 在管理主机创建集群
					2.1 部署脚本运行环境
[root@mgm57 ~]# rpm -q ruby
未安装软件包 ruby 
[root@mgm57 ~]# rpm -q rubygems
未安装软件包 rubygems 
[root@mgm57 ~]# 
[root@mgm57 ~]# yum  -y  install  ruby   rubygems

[root@mgm57 ~]# which  gem
/usr/bin/gem
[root@mgm57 ~]# gem install  redis-3.2.1.gem 
Successfully installed redis-3.2.1
Parsing documentation for redis-3.2.1
Installing ri documentation for redis-3.2.1
1 gem installed
[root@mgm57 ~]# 
					2.2 创建管理脚本

[root@mgm57 ~]# tar -zxvf redis-4.0.8.tar.gz
[root@mgm57 ~]# cd redis-4.0.8/
[root@mgm57 redis-4.0.8]# ls
00-RELEASENOTES  COPYING  Makefile   redis.conf       runtest-sentinel  tests
BUGS             deps     MANIFESTO  runtest          sentinel.conf     utils
CONTRIBUTING     INSTALL  README.md  runtest-cluster  src
[root@mgm57 redis-4.0.8]# ls src/*.rb  
src/redis-trib.rb
[root@mgm57 redis-4.0.8]# echo  $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
[root@mgm57 redis-4.0.8]# 
[root@mgm57 redis-4.0.8]# mkdir /root/bin
[root@mgm57 redis-4.0.8]# cp src/redis-trib.rb /root/bin/
[root@mgm57 redis-4.0.8]# chmod  +x /root/bin/redis-trib.rb 
[root@mgm57 redis-4.0.8]# ls /root/bin/
redis-trib.rb
[root@mgm57 redis-4.0.8]#

[root@mgm57 ~]# redis-trib.rb  help
					2.3 创建集群

[root@mgm57 ~]# redis-trib.rb  create --replicas 1  192.168.4.51:6351 192.168.4.52:6352 \
> 192.168.4.53:6353  192.168.4.54:6354 192.168.4.55:6355 192.168.4.56:6356
> 192.168.4.53:6353  192.168.4.54:6354 192.168.4.55:6355 192.168.4.56:6356
>>> Creating cluster
>>> Performing hash slots allocation on 6 nodes...
Using 3 masters:
192.168.4.51:6351
192.168.4.52:6352
192.168.4.53:6353
Adding replica 192.168.4.55:6355 to 192.168.4.51:6351
Adding replica 192.168.4.56:6356 to 192.168.4.52:6352
Adding replica 192.168.4.54:6354 to 192.168.4.53:6353
M: ba7dde6d71b71246d39e28dd90603a0c5d26669b 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
M: a228c623bffc53427ff05bde95b462a0bd443dce 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
M: 862c3b64be6039d37fe45299b258e3d843c2256a 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
S: 9a33874bfa6ddf623f0efad57db6cb689cd2bc25 192.168.4.54:6354
   replicates 862c3b64be6039d37fe45299b258e3d843c2256a
S: f8422efee502c554be8ed767e88462aa4afd174d 192.168.4.55:6355
   replicates ba7dde6d71b71246d39e28dd90603a0c5d26669b
S: ede6a668242da4d50cba3f26ea7b9af3e33fa95d 192.168.4.56:6356
   replicates a228c623bffc53427ff05bde95b462a0bd443dce
Can I set the above configuration? (type 'yes' to accept): yes //同意
>>> Nodes configuration updated
>>> Assign a different config epoch to each node
>>> Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join...
>>> Performing Cluster Check (using node 192.168.4.51:6351)
M: ba7dde6d71b71246d39e28dd90603a0c5d26669b 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
M: 862c3b64be6039d37fe45299b258e3d843c2256a 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
S: f8422efee502c554be8ed767e88462aa4afd174d 192.168.4.55:6355
   slots: (0 slots) slave
   replicates ba7dde6d71b71246d39e28dd90603a0c5d26669b
S: ede6a668242da4d50cba3f26ea7b9af3e33fa95d 192.168.4.56:6356
   slots: (0 slots) slave
   replicates a228c623bffc53427ff05bde95b462a0bd443dce
M: a228c623bffc53427ff05bde95b462a0bd443dce 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
S: 9a33874bfa6ddf623f0efad57db6cb689cd2bc25 192.168.4.54:6354
   slots: (0 slots) slave
   replicates 862c3b64be6039d37fe45299b258e3d843c2256a
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
[root@mgm57 ~]# 
                     创建集群排错时间  到 16:20
	
	在6台redis 服务器 还原

        1  停止redis服务
	2  ]# rm -rf  /var/lib/redis/6379/*
	3  启动redis服务

        4 在管理主机执行创建集群的命令
	
				3 在管理主机查看集群信息	
[root@mgm57 ~]# redis-trib.rb  info  192.168.4.53:6353
192.168.4.53:6353 (862c3b64...) -> 0 keys | 5461 slots | 1 slaves.
192.168.4.51:6351 (ba7dde6d...) -> 0 keys | 5461 slots | 1 slaves.
192.168.4.52:6352 (a228c623...) -> 0 keys | 5462 slots | 1 slaves.
[OK] 0 keys in 3 masters.
0.00 keys per slot on average.
[root@mgm57 ~]#

[root@mgm57 ~]# redis-trib.rb  check   192.168.4.53:6353
>>> Performing Cluster Check (using node 192.168.4.53:6353)
M: 862c3b64be6039d37fe45299b258e3d843c2256a 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
M: ba7dde6d71b71246d39e28dd90603a0c5d26669b 192.168.4.51:6351
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
M: a228c623bffc53427ff05bde95b462a0bd443dce 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
S: f8422efee502c554be8ed767e88462aa4afd174d 192.168.4.55:6355
   slots: (0 slots) slave
   replicates ba7dde6d71b71246d39e28dd90603a0c5d26669b
S: ede6a668242da4d50cba3f26ea7b9af3e33fa95d 192.168.4.56:6356
   slots: (0 slots) slave
   replicates a228c623bffc53427ff05bde95b462a0bd443dce
S: 9a33874bfa6ddf623f0efad57db6cb689cd2bc25 192.168.4.54:6354
   slots: (0 slots) slave
   replicates 862c3b64be6039d37fe45299b258e3d843c2256a
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
[root@mgm57 ~]#


				4 在客户访问集群存取数据(客户端可以连接集群中的任意1台机器存取数据)
				练习时间 5分钟 到 16:43 
[root@host50 ~]# redis-cli -c -h 192.168.4.54 -p 6354
192.168.4.54:6354> keys *
(empty list or set)
192.168.4.54:6354> set x 101
-> Redirected to slot [16287] located at 192.168.4.53:6353
OK

192.168.4.53:6353> keys *
1) "x"
192.168.4.53:6353> set y 201
OK
192.168.4.53:6353> keys *
1) "y"
2) "x"
192.168.4.53:6353> set z 301
-> Redirected to slot [8157] located at 192.168.4.52:6352
OK
192.168.4.52:6352> keys *
1) "z"
192.168.4.52:6352> get x
-> Redirected to slot [16287] located at 192.168.4.53:6353
"101"
192.168.4.53:6353> keys *
1) "y"
2) "x"
192.168.4.53:6353> get z
-> Redirected to slot [8157] located at 192.168.4.52:6352
"301"
192.168.4.52:6352>
				
			 测试集群功能  5分钟时间 到 17:33 
				1 高可用功能：master宕机后对应的slave自动被选举为master
				2 数据自动备份功能 （从服务器 会自动同步主服务器的数据到本机）
				3 故障自动恢复功能 ：原master启动后 会自动配置为当前master的slave

		2.2.1 移除slave  角色的服务器
命令格式 ]#redis-trib.rb  del-node 192.168.4.52:6352  被移除主机的id值

[root@mgm57 ~]# redis-trib.rb info  192.168.4.54:6354
192.168.4.52:6352 (a228c623...) -> 3 keys | 5462 slots | 1 slaves.
192.168.4.53:6353 (862c3b64...) -> 5 keys | 5461 slots | 1 slaves.
192.168.4.55:6355 (f8422efe...) -> 2 keys | 5461 slots | 1 slaves.
[OK] 10 keys in 3 masters.
0.00 keys per slot on average.
[root@mgm57 ~]# 
[root@mgm57 ~]# redis-trib.rb check 192.168.4.54:6354
>>> Performing Cluster Check (using node 192.168.4.54:6354)
S: 9a33874bfa6ddf623f0efad57db6cb689cd2bc25 192.168.4.54:6354
   slots: (0 slots) slave
   replicates 862c3b64be6039d37fe45299b258e3d843c2256a
M: a228c623bffc53427ff05bde95b462a0bd443dce 192.168.4.52:6352
   slots:5461-10922 (5462 slots) master
   1 additional replica(s)
S: ede6a668242da4d50cba3f26ea7b9af3e33fa95d 192.168.4.56:6356
   slots: (0 slots) slave
   replicates a228c623bffc53427ff05bde95b462a0bd443dce
M: 862c3b64be6039d37fe45299b258e3d843c2256a 192.168.4.53:6353
   slots:10923-16383 (5461 slots) master
   1 additional replica(s)
M: f8422efee502c554be8ed767e88462aa4afd174d 192.168.4.55:6355
   slots:0-5460 (5461 slots) master
   1 additional replica(s)
S: ba7dde6d71b71246d39e28dd90603a0c5d26669b 192.168.4.51:6351
   slots: (0 slots) slave
   replicates f8422efee502c554be8ed767e88462aa4afd174d
[OK] All nodes agree about slots configuration.
>>> Check for open slots...
>>> Check slots coverage...
[OK] All 16384 slots covered.
[root@mgm57 ~]# redis-trib.rb del-node  192.168.4.52:6352 ba7dde6d71b71246d39e28dd90603a0c5d26669b 
>>> Removing node ba7dde6d71b71246d39e28dd90603a0c5d26669b from cluster 192.168.4.52:6352
>>> Sending CLUSTER FORGET messages to the cluster...
>>> SHUTDOWN the node.
[root@mgm57 ~]# 
[root@mgm57 ~]# redis-trib.rb info  192.168.4.54:6354
192.168.4.52:6352 (a228c623...) -> 3 keys | 5462 slots | 1 slaves.
192.168.4.53:6353 (862c3b64...) -> 5 keys | 5461 slots | 1 slaves.
192.168.4.55:6355 (f8422efe...) -> 2 keys | 5461 slots | 0 slaves.
[OK] 10 keys in 3 masters.
0.00 keys per slot on average.
[root@mgm57 ~]# 

		2.2.2  添加slave 角色的服务器 把 192.168.4.58 添加到集群里做服务器
					  1 运行redis服务
					  2 启用集群功能
					  3 在管理主机把主机添加到集群里，并查看
 ]#redis-trib.rb  add-node  --slave  [ --master-id  id值  ] ip地址:端口  192.168.4.51:6351


 [root@mgm57 ~]# redis-trib.rb add-node --slave 192.168.4.58:6379  192.168.4.52:6352
 [root@mgm57 ~]# redis-trib.rb info  192.168.4.52:6352
 [root@mgm57 ~]# redis-trib.rb check 192.168.4.52:6352

	
				  4 客户端访问集群存取数据
  ]# redis-cli  -c  -h 192.168.4.58 -p 端口
   > set  v20  bob
   > get  v20
   > info  replication  //查看复制信息
   
   		2.2.3  添加master 角色的服务器 （休息到 10:30）
					  1 运行redis服务
					  2 启用集群功能
	
		                          3 在管理主机把主机添加到集群里，并查看
                                                3.1 添加主机到集群里
	[root@mgm57 ~]# redis-trib.rb  add-node 192.168.4.58:6379  192.168.4.55:6355
	[root@mgm57 ~]# redis-trib.rb  info  192.168.4.55:6355
192.168.4.55:6355 (f8422efe...) -> 3 keys | 5461 slots | 1 slaves.
192.168.4.58:6379 (adfcc89c...) -> 0 keys | 0 slots | 0 slaves.
192.168.4.52:6352 (a228c623...) -> 5 keys | 5462 slots | 1 slaves.
192.168.4.53:6353 (862c3b64...) -> 9 keys | 5461 slots | 0 slaves.
[OK] 17 keys in 4 masters.
0.00 keys per slot on average.
[root@mgm57 ~]# 
						3.2 分配槽
[root@mgm57 ~]# redis-trib.rb  reshard 192.168.4.55:6355
	移出hash槽个数
	接收hash槽主机ID
	移出hash槽主机ID
	同意配置

[root@mgm57 ~]# redis-trib.rb  info 192.168.4.55:6355
192.168.4.55:6355 (f8422efe...) -> 2 keys | 4096 slots | 1 slaves.
192.168.4.58:6379 (adfcc89c...) -> 6 keys | 4096 slots | 0 slaves.
192.168.4.52:6352 (a228c623...) -> 4 keys | 4096 slots | 1 slaves.
192.168.4.53:6353 (862c3b64...) -> 5 keys | 4096 slots | 0 slaves.
[OK] 17 keys in 4 masters.
0.00 keys per slot on average.
[root@mgm57 ~]# 						
						3.3 查看槽
[root@mgm57 ~]# redis-trib.rb  check  192.168.4.55:6355
M: adfcc89cbd79dc8458faf594d7317168b4135ccf 192.168.4.58:6379
   slots:0-1364,5461-6826,10923-12287 (4096 slots) master
   0 additional replica(s)
						3.3 客户端连接
~]# redis-cli -c  -h 192.168.4.52 -p 6352					
192.168.4.52:6352> set a2 1
-> Redirected to slot [11786] located at 192.168.4.58:6379
OK
192.168.4.58:6379> 
